[{"/Users/yubin/Desktop/yubinary/image-search-engine/search/src/index.js":"1","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/App.js":"2","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/reportWebVitals.js":"3","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/components/SearchEngine.js":"4","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/components/Checkbox.js":"5","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/pages/SearchResult.js":"6","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/components/Header.js":"7"},{"size":500,"mtime":1608815399308,"results":"8","hashOfConfig":"9"},{"size":195,"mtime":1608972470499,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608862815525,"results":"11","hashOfConfig":"9"},{"size":4509,"mtime":1609048722581,"results":"12","hashOfConfig":"9"},{"size":228,"mtime":1608948430484,"results":"13","hashOfConfig":"9"},{"size":5234,"mtime":1609162184697,"results":"14","hashOfConfig":"9"},{"size":335,"mtime":1609057527544,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"u00aoq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/yubin/Desktop/yubinary/image-search-engine/search/src/index.js",[],["34","35"],"/Users/yubin/Desktop/yubinary/image-search-engine/search/src/App.js",[],"/Users/yubin/Desktop/yubinary/image-search-engine/search/src/reportWebVitals.js",[],"/Users/yubin/Desktop/yubinary/image-search-engine/search/src/components/SearchEngine.js",["36"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FaSearch } from \"react-icons/fa\";\nimport Checkbox from \"./Checkbox.js\"\n\nexport default function SearchResult({ makeUrl }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [order, setOrder] = useState(\"\");\n  const [orie, setOrie] = useState(\"\");\n  const [minWidth, setMinWidth] = useState(\"\");\n  const [minHeight, setMinHeight] = useState(\"\");\n  const [color, setColor] = useState({});\n\n  useEffect(() => {\n    makeUrl(\"\", \"\", \"\", \"\", \"\", \"\");\n  }, []);\n\n  // debounce to send request every 500ms\n  const debounce = (fn, delay) => {\n    let timeoutID;\n    return function (...args) {\n      if (timeoutID) {\n        clearTimeout(timeoutID);\n      }\n      timeoutID = setTimeout(() => {\n        fn(...args);\n      }, delay);\n    };\n  };\n\n  // used callback to avoid function being created every time\n  const debounceMinWidth = useRef(\n    debounce((event) =>\n      makeUrl(searchTerm, order, orie, event.target.value, minHeight, color), 500\n    )\n  ).current;\n\n  const debounceMinHeight = useRef(\n    debounce((event) =>\n      makeUrl(searchTerm, order, orie, minWidth, event.target.value, color), 500\n    )\n  ).current;\n\n  // apply whatever inside the input field to state\n  function handleChangeOrder(event) {\n    setOrder(event.target.value);\n    makeUrl(searchTerm, event.target.value, orie, minWidth, minHeight, color);\n  };\n\n  function handleChangeOrie(event) {\n    setOrie(event.target.value);\n    makeUrl(searchTerm, order, event.target.value, minWidth, minHeight, color);\n  };\n\n  function handleChangeColor(event) {\n    let obj = { ...color, [event.target.name]: event.target.checked }\n    setColor(obj);\n    makeUrl(searchTerm, order, orie, minWidth, minHeight, obj);\n  }\n\n  function handleChangeMinWidth(event) {\n    setMinWidth(event.target.value);\n    debounceMinWidth(event);\n  };\n\n  function handleChangeMinHeight(event) {\n    setMinHeight(event.target.value);\n    debounceMinHeight(event)\n  };\n\n  // when form submitted, send get request to API\n  function handleSubmit(event) {\n    // prevent default action of form (ex. refresh the page)\n    event.preventDefault();\n    makeUrl(searchTerm, order, orie, minWidth, minHeight, color);\n  }\n\n  const checkboxes = [\n    {\n      name: \"grayscale\",\n      key: \"grayscale\",\n      label: \"grayscale\",\n    },\n    {\n      name: \"red\",\n      key: \"red\",\n      label: \"red\",\n    },\n    {\n      name: \"orange\",\n      key: \"orange\",\n      label: \"orange\",\n    },\n    {\n      name: \"green\",\n      key: \"green\",\n      label: \"green\",\n    },\n    {\n      name: \"blue\",\n      key: \"blue\",\n      label: \"blue\",\n    },\n    {\n      name: \"brown\",\n      key: \"brown\",\n      label: \"brown\",\n    }\n  ];\n\n  return (\n    <div>\n      <div className=\"search\">\n        <form onSubmit={handleSubmit}>\n          <FaSearch className=\"icon\" />\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Looking for images?\"\n            value={searchTerm}\n            onChange={(event) => setSearchTerm(event.target.value)}></input>\n        </form>\n      </div>\n      <div className=\"advanced\">\n        <div className=\"sort order\">\n          <select onChange={handleChangeOrder}>\n            <option value=\"popular\">Popular</option>\n            <option value=\"latest\">Latest</option>\n          </select>\n          <div className=\"select-arrow\"></div>\n        </div>\n        <div className=\"sort orie\">\n          <select onChange={handleChangeOrie}>\n            <option value=\"all\">All Shapes</option>\n            <option value=\"horizontal\">Horizontal</option>\n            <option value=\"vertical\">Vertical</option>\n          </select>\n          <div className=\"select-arrow\"></div>\n        </div>\n        <div className=\"filter min\">\n          <form>\n            <input\n              value={minWidth}\n              placeholder=\"Min Width\"\n              onChange={handleChangeMinWidth}></input>\n            <p>x</p>\n            <input\n              value={minHeight}\n              placeholder=\"Min Height\"\n              onChange={handleChangeMinHeight}></input>\n          </form>\n        </div>\n        <div className=\"filter color\">\n          {\n            checkboxes.map(item => (\n              <div>\n                <Checkbox id={item.name} name={item.name} checked={color[item.name]} onChange={handleChangeColor} />\n                <label htmlFor={item.name}></label>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/components/Checkbox.js",[],["37","38"],"/Users/yubin/Desktop/yubinary/image-search-engine/search/src/pages/SearchResult.js",["39","40"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LazyImage } from \"react-lazy-images\";\nimport SearchEngine from \"../components/SearchEngine.js\";\nimport Header from \"../components/Header.js\";\nimport { BiComment, BiHeart, BiLike, BiErrorAlt } from \"react-icons/bi\";\nimport \"../styles/SearchResult.css\";\n\nexport default function SearchResult() {\n  const [images, setImages] = useState([]);\n  const [isBottom, setisBottom] = useState(false);\n  const [page, setPage] = useState(1);\n  const [urlParam, setUrlParam] = useState(\"\");\n\n  // throttle to enable infinite scrolling\n  const throttle = (fn, delay) => {\n    let last = 0;\n    return function (...args) {\n      const now = new Date().getTime();\n      if (now - last < delay) return;\n      else last = now;\n      return fn(...args);\n    }\n  }\n\n  useEffect(() => {\n    function onScroll(event) {\n      let scrollHeight = event.target.scrollingElement.scrollHeight;\n      let scrollTop = event.target.scrollingElement.scrollTop;\n      let clientHeight = event.target.scrollingElement.clientHeight\n      setisBottom(scrollHeight - scrollTop < clientHeight + 600)\n    }\n    const throttleOnScroll = throttle(onScroll, 800);\n    window.addEventListener('scroll', throttleOnScroll);\n\n    // when reaches bottom, fetch to load more images\n    if (isBottom) {\n      setPage(page => page + 1);\n      makeFetch(urlParam, page + 1)\n    }\n  }, [isBottom]);\n\n  // make get request to pixabay API\n  function makeFetch(url, page) {\n    axios.get(url + page)\n      .then(result => {\n        if (page === 1) {\n          setImages([]);\n          setImages(result.data.hits);\n        } else {\n          // if page is greater than 1, load more images\n          setImages([...images, ...result.data.hits])\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n\n  // helper function to clean color object\n  function makeListParameter(color) {\n    let result = [];\n    for (const key in color) {\n      if (color[key]) result.push(key);\n    } return result.join(\",\");\n  }\n\n  // when form submitted, send get request to API\n  function makeUrl(searchTerm, order, orie, minWidth, minHeight, color) {\n    const API_KEY = \"19383178-42909148a8b02e3e78ee4e9be\";\n    let searchURL = \"&q=\" + encodeURIComponent(searchTerm);\n    let orderURL = order ? \"&order=\" + order : \"\";\n    let orieURL = orie ? \"&orientation=\" + orie : \"\";\n    let widthURL = minWidth ? \"&min_width=\" + minWidth : \"\";\n    let heightURL = minHeight ? \"&min_height=\" + minHeight : \"\";\n    let colorURL = color ? \"&colors=\" + makeListParameter(color) : \"\";\n    let defaultURL = \"&image_type=photo&pretty=true&safesearch=true&page=\";\n    let URL = \"https://pixabay.com/api/?key=\" + API_KEY + searchURL + orderURL + orieURL + widthURL + heightURL + colorURL + defaultURL;\n\n    setUrlParam(URL);\n    // resets page to 1 when search engine used\n    setPage(1)\n    makeFetch(URL, 1);\n  }\n\n  // display tags\n  function displayTags(tags) {\n    let lst = tags.split(\",\");\n    let result = [];\n    for (let t of lst) {\n      result.push(\n        <div className=\"tag\">\n          <p>{t}</p>\n        </div>\n      )\n    } return result\n  }\n\n  // display stats\n  function displayStats(comments, favorites, likes) {\n    return (\n      <div className=\"stat\">\n        <BiHeart className=\"stat-icon\" /><p>{favorites}</p>\n        <BiLike className=\"stat-icon\" /><p>{likes}</p>\n        <BiComment className=\"stat-icon\" /><p>{comments}</p>\n      </div>\n    )\n  }\n\n  // display all images, used lazy loading \n  function displayImages(images, n) {\n    let result = [];\n    for (let i = n; i < images.length; i += 4) {\n      let image = images[i];\n      result.push(\n        <div className=\"card\">\n          <LazyImage\n            src={image.largeImageURL}\n            alt={image.id}\n            placeholder={({ imageProps, ref }) =>\n              <div ref={ref} className=\"preloader\">\n              </div>\n            }\n            actual={({ imageProps }) => <img {...imageProps} />}\n          />\n          <div className=\"container\">\n            <div className=\"stats\">\n              {displayStats(image.comments, image.favorites, image.likes)}\n            </div>\n            <div className=\"tags\">\n              {displayTags(image.tags)}\n            </div>\n          </div>\n        </div >\n      )\n    }\n    return result;\n  }\n\n  // create four columns for image grid\n  function createColumns(images, url) {\n    let result = [];\n    let imagesCopy = JSON.parse(JSON.stringify(images));\n    if (imagesCopy.length === 0 && url.length > 117) {\n      result.push(\n        <div className=\"empty-column\">\n          <BiErrorAlt className=\"icon\" />\n          <h1>No images found</h1>\n          <p>Please try searching with another term.</p>\n        </div>\n      )\n    } else {\n      for (let n = 0; n < 4; n++) {\n        result.push(\n          <div className=\"column\">\n            {displayImages(imagesCopy, n)}\n          </div>\n        )\n      }\n    }\n    return result;\n  }\n\n  return (\n    <div>\n      <Header />\n      <SearchEngine makeUrl={makeUrl} />\n      <div className=\"images\">\n        <div className=\"row\">\n          {createColumns(images, urlParam)}\n        </div>\n      </div>\n    </div >\n  )\n}","/Users/yubin/Desktop/yubinary/image-search-engine/search/src/components/Header.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":15,"column":6,"nodeType":"47","endLine":15,"endColumn":8,"suggestions":"48"},{"ruleId":"41","replacedBy":"49"},{"ruleId":"43","replacedBy":"50"},{"ruleId":"45","severity":1,"message":"51","line":41,"column":6,"nodeType":"47","endLine":41,"endColumn":16,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":124,"column":41,"nodeType":"55","endLine":124,"endColumn":64},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeUrl'. Either include it or remove the dependency array. If 'makeUrl' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["58"],["56"],["57"],"React Hook useEffect has missing dependencies: 'makeFetch', 'page', and 'urlParam'. Either include them or remove the dependency array.",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [makeUrl]",{"range":"64","text":"65"},"Update the dependencies array to be: [isBottom, makeFetch, page, urlParam]",{"range":"66","text":"67"},[530,532],"[makeUrl]",[1420,1430],"[isBottom, makeFetch, page, urlParam]"]